{"ast":null,"code":"var _jsxFileName = \"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPage() {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"watched\");\n    if (storedData) {\n      const parsedData = JSON.parse(storedData);\n      setEvents(parsedData.events);\n    }\n  }, []);\n  const handleEventDrop = info => {\n    const {\n      event,\n      oldEvent\n    } = info;\n    const updatedEvents = events.map(e => {\n      if (e.id === event.id) {\n        return {\n          ...e,\n          start: event.start,\n          end: event.end\n        };\n      }\n      return e;\n    });\n    setEvents(updatedEvents);\n    const updatedData = {\n      events: updatedEvents\n    };\n    localStorage.setItem(\"watched\", JSON.stringify(updatedData));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      editable: true,\n      eventResizableFromStart: true // 이벤트 시작 시간으로부터 리사이즈 가능\n      ,\n      eventDurationEditable: true // 이벤트 기간을 조정 가능\n      ,\n      eventDrop: handleEventDrop // 이벤트 드롭 핸들러\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(MyPage, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","MyPage","_s","events","setEvents","storedData","localStorage","getItem","parsedData","JSON","parse","handleEventDrop","info","event","oldEvent","updatedEvents","map","e","id","start","end","updatedData","setItem","stringify","children","plugins","initialView","editable","eventResizableFromStart","eventDurationEditable","eventDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nfunction MyPage() {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        const storedData = localStorage.getItem(\"watched\");\n        if (storedData) {\n            const parsedData = JSON.parse(storedData);\n            setEvents(parsedData.events);\n        }\n    }, []);\n\n    const handleEventDrop = (info) => {\n        const { event, oldEvent } = info;\n        const updatedEvents = events.map((e) => {\n            if (e.id === event.id) {\n                return {\n                    ...e,\n                    start: event.start,\n                    end: event.end,\n                };\n            }\n            return e;\n        });\n        setEvents(updatedEvents);\n\n        const updatedData = {\n            events: updatedEvents,\n        };\n        localStorage.setItem(\"watched\", JSON.stringify(updatedData));\n    };\n\n    return (\n        <div>\n            <FullCalendar\n                plugins={[dayGridPlugin, interactionPlugin]}\n                initialView=\"dayGridMonth\"\n                events={events}\n                editable={true}\n                eventResizableFromStart={true} // 이벤트 시작 시간으로부터 리사이즈 가능\n                eventDurationEditable={true} // 이벤트 기간을 조정 가능\n                eventDrop={handleEventDrop} // 이벤트 드롭 핸들러\n            />\n        </div>\n    );\n}\n\nexport default MyPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAClD,IAAIF,UAAU,EAAE;MACZ,MAAMG,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACzCD,SAAS,CAACI,UAAU,CAACL,MAAM,CAAC;IAChC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,eAAe,GAAIC,IAAI,IAAK;IAC9B,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGF,IAAI;IAChC,MAAMG,aAAa,GAAGZ,MAAM,CAACa,GAAG,CAAEC,CAAC,IAAK;MACpC,IAAIA,CAAC,CAACC,EAAE,KAAKL,KAAK,CAACK,EAAE,EAAE;QACnB,OAAO;UACH,GAAGD,CAAC;UACJE,KAAK,EAAEN,KAAK,CAACM,KAAK;UAClBC,GAAG,EAAEP,KAAK,CAACO;QACf,CAAC;MACL;MACA,OAAOH,CAAC;IACZ,CAAC,CAAC;IACFb,SAAS,CAACW,aAAa,CAAC;IAExB,MAAMM,WAAW,GAAG;MAChBlB,MAAM,EAAEY;IACZ,CAAC;IACDT,YAAY,CAACgB,OAAO,CAAC,SAAS,EAAEb,IAAI,CAACc,SAAS,CAACF,WAAW,CAAC,CAAC;EAChE,CAAC;EAED,oBACIrB,OAAA;IAAAwB,QAAA,eACIxB,OAAA,CAACJ,YAAY;MACT6B,OAAO,EAAE,CAAC5B,aAAa,EAAEC,iBAAiB,CAAE;MAC5C4B,WAAW,EAAC,cAAc;MAC1BvB,MAAM,EAAEA,MAAO;MACfwB,QAAQ,EAAE,IAAK;MACfC,uBAAuB,EAAE,IAAK,CAAC;MAAA;MAC/BC,qBAAqB,EAAE,IAAK,CAAC;MAAA;MAC7BC,SAAS,EAAEnB,eAAgB,CAAC;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd;AAAChC,EAAA,CA5CQD,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AA8Cf,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}