{"ast":null,"code":"var _jsxFileName = \"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport Header from \"./Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport './../style/MyCalendar.css';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyPage = () => {\n  _s();\n  const externalEventsRef = useRef(null);\n  const [events, setEvents] = useState([]);\n  const [state, setState] = useState({\n    externalEvents: JSON.parse(localStorage.getItem(\"watched\"))\n  });\n  useEffect(() => {\n    const storedEvents = localStorage.getItem(\"watched\");\n    if (storedEvents) {\n      setEvents(JSON.parse(storedEvents));\n    }\n    const draggableEl = document.getElementById(\"external-events\");\n    new Draggable(draggableEl, {\n      itemSelector: \".fc-event\",\n      eventData: function (eventEl) {\n        let id = eventEl.getAttribute(\"data-id\");\n        let name = eventEl.getAttribute(\"title\");\n        return {\n          id: id,\n          title: name,\n          extendedProps: {\n            eventId: id\n          },\n          startEditable: true,\n          create: true\n        };\n      }\n    });\n  }, []);\n  const handleEventDrop = info => {\n    const {\n      event,\n      draggedEl\n    } = info;\n    const eventId = event.extendedProps.eventId;\n    const isExternalEvent = state.externalEvents.some(externalEvent => externalEvent.placeId === eventId);\n    if (isExternalEvent) {\n      const updatedExternalEvents = state.externalEvents.filter(externalEvent => externalEvent.placeId !== eventId);\n      setState(prevState => ({\n        ...prevState,\n        externalEvents: updatedExternalEvents\n      }));\n\n      // Remove the event element from the DOM\n      const externalEventsContainer = externalEventsRef.current;\n      const eventElements = externalEventsContainer.getElementsByClassName('fc-event');\n      for (let i = 0; i < eventElements.length; i++) {\n        if (eventElements[i].getAttribute('data-id') === eventId.toString()) {\n          externalEventsContainer.removeChild(eventElements[i]);\n          break;\n        }\n      }\n    }\n\n    // Update the dropped event's start and end times\n    const newEvents = [...events];\n    const index = newEvents.findIndex(e => e.id === eventId);\n    newEvents[index] = {\n      ...newEvents[index],\n      start: event.start,\n      end: event.end\n    };\n    setEvents(newEvents);\n    localStorage.setItem('watched', JSON.stringify(newEvents));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC774\\uBCA4\\uD2B8 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"external-events\",\n          children: state.externalEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\",\n            title: event.placeName,\n            \"data-id\": event.placeId,\n            style: {\n              backgroundColor: event.color,\n              borderColor: event.color,\n              cursor: \"pointer\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fc-event-main\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: event.placeName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)\n          }, event.placeId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin, interactionPlugin],\n          initialView: \"dayGridMonth\",\n          events: events,\n          editable: true,\n          droppable: true,\n          eventDrop: handleEventDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MyPage, \"sRxnsxEV650tkoLOalpYW3yhZeY=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Header","useNavigate","FullCalendar","dayGridPlugin","interactionPlugin","Draggable","jsxDEV","_jsxDEV","Fragment","_Fragment","MyPage","_s","externalEventsRef","events","setEvents","state","setState","externalEvents","JSON","parse","localStorage","getItem","storedEvents","draggableEl","document","getElementById","itemSelector","eventData","eventEl","id","getAttribute","name","title","extendedProps","eventId","startEditable","create","handleEventDrop","info","event","draggedEl","isExternalEvent","some","externalEvent","placeId","updatedExternalEvents","filter","prevState","externalEventsContainer","current","eventElements","getElementsByClassName","i","length","toString","removeChild","newEvents","index","findIndex","e","start","end","setItem","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","placeName","style","backgroundColor","color","borderColor","cursor","plugins","initialView","editable","droppable","eventDrop","_c","$RefreshReg$"],"sources":["/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport Header from \"./Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport './../style/MyCalendar.css';\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\n\nconst MyPage = () => {\n    const externalEventsRef = useRef(null);\n\n    const [events, setEvents] = useState([]);\n    const [state, setState] = useState({\n        externalEvents: JSON.parse(localStorage.getItem(\"watched\")),\n    });\n\n    useEffect(() => {\n        const storedEvents = localStorage.getItem(\"watched\");\n        if (storedEvents) {\n            setEvents(JSON.parse(storedEvents));\n        }\n\n        const draggableEl = document.getElementById(\"external-events\");\n        new Draggable(draggableEl, {\n            itemSelector: \".fc-event\",\n            eventData: function (eventEl) {\n                let id = eventEl.getAttribute(\"data-id\");\n                let name = eventEl.getAttribute(\"title\");\n                return {\n                    id: id,\n                    title: name,\n                    extendedProps: {\n                        eventId: id,\n                    },\n                    startEditable: true,\n                    create: true,\n                };\n            },\n        });\n    }, []);\n\n    const handleEventDrop = (info) => {\n        const { event, draggedEl } = info;\n        const eventId = event.extendedProps.eventId;\n\n        const isExternalEvent = state.externalEvents.some(\n            (externalEvent) => externalEvent.placeId === eventId\n        );\n\n        if (isExternalEvent) {\n            const updatedExternalEvents = state.externalEvents.filter(\n                (externalEvent) => externalEvent.placeId !== eventId\n            );\n            setState((prevState) => ({\n                ...prevState,\n                externalEvents: updatedExternalEvents,\n            }));\n\n            // Remove the event element from the DOM\n            const externalEventsContainer = externalEventsRef.current;\n            const eventElements = externalEventsContainer.getElementsByClassName(\n                'fc-event'\n            );\n            for (let i = 0; i < eventElements.length; i++) {\n                if (\n                    eventElements[i].getAttribute('data-id') === eventId.toString()\n                ) {\n                    externalEventsContainer.removeChild(eventElements[i]);\n                    break;\n                }\n            }\n        }\n\n        // Update the dropped event's start and end times\n        const newEvents = [...events];\n        const index = newEvents.findIndex((e) => e.id === eventId);\n        newEvents[index] = {\n            ...newEvents[index],\n            start: event.start,\n            end: event.end,\n        };\n        setEvents(newEvents);\n        localStorage.setItem('watched', JSON.stringify(newEvents));\n    };\n\n\n\n    return (\n        <>\n            <Header />\n            <div className='calendar-head'>\n                <div>\n                    <h2>이벤트 목록</h2>\n                    <div id=\"external-events\">\n                        {state.externalEvents.map((event) => (\n                            <div\n                                className=\"fc-event fc-h-event mb-1 fc-daygrid-event fc-daygrid-block-event p-2\"\n                                title={event.placeName}\n                                data-id={event.placeId}\n                                key={event.placeId}\n                                style={{\n                                    backgroundColor: event.color,\n                                    borderColor: event.color,\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                                <div className=\"fc-event-main\">\n                                    <div>\n                                        <strong>{event.placeName}</strong>\n                                    </div>\n                                    <br />\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div>\n                    <FullCalendar\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        initialView=\"dayGridMonth\"\n                        events={events}\n                        editable={true}\n                        droppable={true}\n                        eventDrop={handleEventDrop}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default MyPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}