{"ast":null,"code":"var _jsxFileName = \"/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPage() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [dataNames, setDataNames] = useState([]);\n  useEffect(() => {\n    const storedData = localStorage.getItem(\"data\");\n    if (storedData) {\n      const parsedData = JSON.parse(storedData);\n      setEvents(parsedData.events);\n      setDataNames(parsedData.dataNames);\n    }\n  }, []);\n  const handleDrop = info => {\n    const dataName = info.draggedEl.dataset.name;\n    const newEvent = {\n      title: dataName,\n      start: info.dateStr,\n      allDay: info.allDay\n    };\n    const updatedEvents = [...events, newEvent];\n    setEvents(updatedEvents);\n    const updatedData = {\n      events: updatedEvents,\n      dataNames: dataNames.filter(name => name !== dataName)\n    };\n    localStorage.setItem(\"data\", JSON.stringify(updatedData));\n  };\n  const renderDataNames = () => {\n    return dataNames.map(name => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-name\": name,\n      draggable: true,\n      onDragStart: event => handleDragStart(event, name),\n      children: name\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this));\n  };\n  const handleDragStart = (event, name) => {\n    event.dataTransfer.setData(\"text/plain\", name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-list\",\n      children: renderDataNames()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      editable: true,\n      droppable: true,\n      drop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(MyPage, \"mxuT6GVFAgMXM6wiLPRovgVswbw=\");\n_c = MyPage;\nexport default MyPage;\nvar _c;\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","MyPage","_s","events","setEvents","dataNames","setDataNames","storedData","localStorage","getItem","parsedData","JSON","parse","handleDrop","info","dataName","draggedEl","dataset","name","newEvent","title","start","dateStr","allDay","updatedEvents","updatedData","filter","setItem","stringify","renderDataNames","map","draggable","onDragStart","event","handleDragStart","children","fileName","_jsxFileName","lineNumber","columnNumber","dataTransfer","setData","className","plugins","initialView","editable","droppable","drop","_c","$RefreshReg$"],"sources":["/Users/raina/Desktop/traduler_react/src/main/frontend/src/component/MyPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nfunction MyPage() {\n    const [events, setEvents] = useState([]);\n    const [dataNames, setDataNames] = useState([]);\n\n    useEffect(() => {\n        const storedData = localStorage.getItem(\"data\");\n        if (storedData) {\n            const parsedData = JSON.parse(storedData);\n            setEvents(parsedData.events);\n            setDataNames(parsedData.dataNames);\n        }\n    }, []);\n\n    const handleDrop = (info) => {\n        const dataName = info.draggedEl.dataset.name;\n        const newEvent = {\n            title: dataName,\n            start: info.dateStr,\n            allDay: info.allDay,\n        };\n        const updatedEvents = [...events, newEvent];\n        setEvents(updatedEvents);\n\n        const updatedData = {\n            events: updatedEvents,\n            dataNames: dataNames.filter((name) => name !== dataName),\n        };\n        localStorage.setItem(\"data\", JSON.stringify(updatedData));\n    };\n\n    const renderDataNames = () => {\n        return dataNames.map((name) => (\n            <div\n                key={name}\n                data-name={name}\n                draggable={true}\n                onDragStart={(event) => handleDragStart(event, name)}\n            >\n                {name}\n            </div>\n        ));\n    };\n\n    const handleDragStart = (event, name) => {\n        event.dataTransfer.setData(\"text/plain\", name);\n    };\n\n    return (\n        <div>\n            <div className=\"data-list\">{renderDataNames()}</div>\n            <FullCalendar\n                plugins={[dayGridPlugin, interactionPlugin]}\n                initialView=\"dayGridMonth\"\n                events={events}\n                editable={true}\n                droppable={true}\n                drop={handleDrop}\n            />\n        </div>\n    );\n}\n\nexport default MyPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}